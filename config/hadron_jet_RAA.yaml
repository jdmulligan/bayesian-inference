# Configuration for STAT analysis
#-------------------------------------------
# General parameters

output_dir: '/home/james/jetscape-docker/bayesian-inference/output/20230726'

initialize_observables: False
preprocess_input_data: False
fit_emulators: False
run_mcmc: False
run_closure_tests: False

plot:
  input_data: False
  emulators: False
  mcmc: False
  qhat: False
  closure_tests: False

debug_level: 0

#-------------------------------------------
# The design points, predictions, and experimental data are located in tables produced by the aggregation machinery
observable_table_dir: '/rstorage/jetscape/STAT-Bayesian/Analysis1/20230116/tables'

# We make use of some info in the JETSCAPE-analysis config that was used to aggregate/plot observables
observable_config_dir: '/home/james/jetscape-docker/JETSCAPE-analysis/config'

# Filename of the observables file that we will use. This could be the standard one, or it could
# have some predictions preprocessing applied to it.
observables_filename: "observables.h5"

#-------------------------------------------
# Default parameter settings
parameters:
  #-------------------------------------------
  # Preprocessing parameters
  preprocessing_parameters: &default_preprocessing_parameters
    smoothing:
      outlier_n_RMS: 2.
      interpolation_method: "simple" # or "cubic_spline"
      max_n_feature_outliers_to_interpolate: 1

  #-------------------------------------------
  # Emulator parameters
  emulator_parameters: &default_emulator_parameters
    force_retrain: True
    n_pc: 20

    mean_function: 'constant'                      # constant, linear
    constant: 0.
    linear_weights: []

    covariance_function: 'matern'                  # squared_exponential, power_exponential, matern
    matern_nu: 1.5
    variance: 1                                    # overall variance
    length_scale_bounds: [0.1, 10]

    # Disable noise with `null` (ie. `noise: null`)
    noise:
      type: "white"
      args:
        # NOTE: Can't raise to power in yaml, so you have to evaluate them by hand
        noise_level: 0.25  # 0.5**2
        noise_level_bounds: [0.0001, 1]  # [0.01**2, 1**2]

    # Gaussian Process Regressor
    GPR:
      n_restarts: 50
      alpha: 1.e-10

    # Validation
    # We want to support the following:
    #  - k-fold cross-validation
    #  - validation dataset

    # Cross-validation
    cross_validation: True
    cross_validation_k: 5

    # TODO: Independent validation dataset
    independent_validation: False

  #-------------------------------------------
  # MCMC parameters
  mcmc_parameters: &default_mcmc_parameters
    n_walkers: 100
    n_burn_steps: 1000
    n_sampling_steps: 5000
    n_logging_steps: 100

  #-------------------------------------------
  # Closure test parameters
  closure: &default_closure_parameters
    confidence: 0.9

#-------------------------------------------
# Specify observables
# We want to allow to configure the analysis to only use various subsets of observables
#   (e.g. jet/hadron/substructure observables, sqrts, centrality, ...)
# We will do this by looping over the specified models below:
#   - We will loop through the parameterizations and run a separate analysis for each
#   - We will start by using all observables in the table directory for that parameterization
#   - We will then filter by the sqrts, centrality specified
#   - Finally, we select any observables whose filename contains a string from observable_list

# Set general share parameters
analysis_base: &model_base
  model_name: 'MATTER+LBT'
  parameterizations: ['exponential']
  sqrts_list: [200, 2760, 5020]
  centrality_range: [0,10]
  # Can also be a list of centrality ranges. eg:
  #centrality_range: [[0, 10], [30, 50]]
  recoil_scheme: 'negative_recominber'
  parameterization:
    exponential:
      names: ['$\alpha_S^{\rm{fix}}$', '$Q_0$', '$c_1$', '$c_2$', '$\tau_0$', '$c_3$']
      min: [0.1, 1, 0.006737946999085467, 0.006737946999085467, 0, 0.049787068367863944]
      max: [0.5, 10, 10, 10, 1.5, 100]
    binomial:
      names: ['$\alpha_S^{\rm{fix}}$', '$Q_0$', '$c_1$', '$c_2$', '$a$', '$b$', '$\tau_0$']
      min: [0.1, 1, 0.006737946999085467, 0.006737946999085467, -10, -10, 0]
      max: [0.5, 10, 10, 10, 100, 100, 1.5]
  alpha: 0.2
  validation_indices: [200, 230] # For exp parameterization, these are the same for all sqrts (i.e. all points 200-229 inclusive)

analyses:

  analysis1:
    parameters:
      preprocessing:
        <<: *default_preprocessing_parameters
      emulators:
        default_group:
          <<: *default_emulator_parameters
          observable_list:
            - 'hadron__pt_'
      mcmc:
        <<: *default_mcmc_parameters
      closure:
        <<: *default_closure_parameters
    <<: *model_base
    plot_panel_shapes: [[3,3], [3,3]]

  analysis2:
    parameters:
      preprocessing:
        <<: *default_preprocessing_parameters
      emulators:
        default_group:
          <<: *default_emulator_parameters
          observable_list:
            - 'jet__pt_'
          observable_exclude_list:
            - "pt_y_atlas"
      mcmc:
        <<: *default_mcmc_parameters
      closure:
        <<: *default_closure_parameters
    <<: *model_base
    plot_panel_shapes: [[3,3], [3,3], [3,3]]

  analysis3:
    parameters:
      preprocessing:
        <<: *default_preprocessing_parameters
      emulators:
        default_group:
          <<: *default_emulator_parameters
          observable_list:
            - 'hadron__pt_'
            - 'jet__pt_'
            - 'jet__Dz_'
            - 'chjet__zg_'
            - 'chjet__tg_'
          observable_exclude_list:
            - "pt_y_atlas"
      mcmc:
        <<: *default_mcmc_parameters
      closure:
        <<: *default_closure_parameters
    <<: *model_base
    plot_panel_shapes: [[3,3], [3,3], [3,3], [3,3], [3,3], [3,3]]
